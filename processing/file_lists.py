import numpy as np


def run_mm_steps(steps=None):
    # base_path = '/home/proton/repos/python3316/Data/'
    base_path = '/home/justin/Desktop/Davis_Data_Backup/Wednesday/thick_10cmFoV_mmsteps/'

    files01 = ['2020-10-07-1042.h5', '2020-10-07-1048.h5', '2020-10-07-1050.h5', '2020-10-07-1051.h5',
               '2020-10-07-1054.h5', '2020-10-07-1055.h5', '2020-10-07-1057.h5', '2020-10-07-1058.h5',
               '2020-10-07-1100.h5', '2020-10-07-1102.h5']  # step measurement 0-9, 0-1 cm

    files12 = ['2020-10-07-1103.h5', '2020-10-07-1109.h5', '2020-10-07-1111.h5', '2020-10-07-1112.h5',
               '2020-10-07-1114.h5', '2020-10-07-1116.h5', '2020-10-07-1117.h5', '2020-10-07-1119.h5',
               '2020-10-07-1120.h5', '2020-10-07-1121.h5']  # step measurement 10-19, 1-2 cm

    files23 = ['2020-10-07-1123.h5', '2020-10-07-1127.h5', '2020-10-07-1129.h5', '2020-10-07-1130.h5',
               '2020-10-07-1132.h5', '2020-10-07-1133.h5', '2020-10-07-1134.h5', '2020-10-07-1136.h5',
               '2020-10-07-1137.h5', '2020-10-07-1139.h5']  # step measurement 20-29, 2-3 cm

    files34 = ['2020-10-07-1140.h5', '2020-10-07-1142.h5', '2020-10-07-1143.h5', '2020-10-07-1145.h5',
               '2020-10-07-1146.h5', '2020-10-07-1148.h5', '2020-10-07-1150.h5', '2020-10-07-1151.h5',
               '2020-10-07-1153.h5', '2020-10-07-1154.h5']  # step measurement 30-39, 3-4 cm

    files45 = ['2020-10-07-1155.h5', '2020-10-07-1157.h5', '2020-10-07-1158.h5', '2020-10-07-1200.h5',
               '2020-10-07-1201.h5', '2020-10-07-1203.h5', '2020-10-07-1204.h5', '2020-10-07-1206.h5',
               '2020-10-07-1207.h5', '2020-10-07-1209.h5']  # step measurement 41-49, 4-5 cm

    files56 = ['2020-10-07-1210.h5', '2020-10-07-1219.h5', '2020-10-07-1221.h5', '2020-10-07-1222.h5',
               '2020-10-07-1224.h5', '2020-10-07-1225.h5', '2020-10-07-1226.h5', '2020-10-07-1228.h5',
               '2020-10-07-1229.h5', '2020-10-07-1230.h5']  # step measurement 50-59, 5-6 cm

    files67 = ['2020-10-07-1232.h5', '2020-10-07-1233.h5', '2020-10-07-1234.h5', '2020-10-07-1236.h5',
               '2020-10-07-1237.h5', '2020-10-07-1238.h5', '2020-10-07-1240.h5', '2020-10-07-1241.h5',
               '2020-10-07-1243.h5', '2020-10-07-1244.h5']  # step 60 - 69, 6 to 7 cm

    files78 = ['2020-10-07-1245.h5', '2020-10-07-1247.h5', '2020-10-07-1248.h5', '2020-10-07-1250.h5',
               '2020-10-07-1251.h5', '2020-10-07-1252.h5', '2020-10-07-1254.h5', '2020-10-07-1255.h5',
               '2020-10-07-1257.h5', '2020-10-07-1258.h5']  # step 70 - 79, 7 to 8 cm

    files89 = ['2020-10-07-1300.h5', '2020-10-07-1301.h5', '2020-10-07-1303.h5', '2020-10-07-1304.h5',
               '2020-10-07-1305.h5', '2020-10-07-1307.h5', '2020-10-07-1309.h5', '2020-10-07-1310.h5',
               '2020-10-07-1313.h5', '2020-10-07-1314.h5']  # step 80 - 89, 8 to 9 cm

    files9 = ['2020-10-07-1322.h5', '2020-10-07-1324.h5', '2020-10-07-1327.h5', '2020-10-07-1329.h5',
              '2020-10-07-1331.h5', '2020-10-07-1333.h5', '2020-10-07-1334.h5', '2020-10-07-1337.h5',
              '2020-10-07-1340.h5', '2020-10-07-1342.h5', '2020-10-07-1344.h5']  # step measurement 90-100, 9-10 cm

    list_of_files = [files01, files12, files23, files34, files45, files56, files67, files78, files89, files9]
    if steps is None:
        return base_path, list_of_files
    return base_path, [list_of_files[idx] for idx in steps]


def temp_gains_and_shifts():
    calib = {}

    calib['pmt_gains'] = np.array([[1., 1., 1., 1.],  # 0
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],  # 4
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],  # 8
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],
                                   [1., 1., 1., 1.],  # 12
                                   [1., 1., 1., 1.],  # [1., 0.5, 1., 1.],
                                   [1., 0.5, 1., 1.],  # [1., 1., 1., 1.],
                                   [1., 1., 1., 1.]])

    calib['pmt_shifts'] = np.array([[0., 0., 0., 0.],  # 0
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],  # 4
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],  # 8
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],  # 12
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.],
                                    [0., 0., 0., 0.]])

    calib['module_gains'] = np.array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
    calib['module_shifts'] = np.array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
    return calib